The functionality, however, seems fine, though I'd like ribasushi to
double check it before merging.

* The diff of BelongsTo.pm from master to HEAD currently reads the following
bollocks:

-  $attrs->{is_foreign_key_constraint} = 1
-    if not exists $attrs->{is_foreign_key_constraint};
+  $attrs->{relationship_target_owns_me} = 1
+    if not $attrs->{relationship_target_owns_me};
+
+  $attrs->{is_foreign_rel} = 1
+    if not exists $attrs->{is_foreign_rel};

* Generally the default fallback is a check is for boolean not. This makes it
impossible to pass in an explicit negative. 7fc30cfd82 claims that I requested
this - I was asking for a change from exists to undef (with the idea that
passing an undef in would negate an inherited value, and reinvoke the default
determination)

* After an offline discussion both mst and riba agreed that the current 
relationship definition framework is bollocks anyway, and introducing a new
concept (owned) will make things even messier. Instead we settled on a flag
of is_belongs_to => 1/0, which should be sufficient for the time being, and
for what frew needed it for
